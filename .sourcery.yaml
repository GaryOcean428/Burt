version: "1" # The schema version of this config file

ignore: # A list of paths or files which Sourcery will ignore.
  - .git
  - env
  - .env
  - .tox
  - node_modules
  - vendor
  - venv
  - .venv
  - ~/.pyenv
  - ~/.rye
  - ~/.vscode
  - .vscode
  - ~/.cache
  - ~/.config
  - ~/.local
  - work_dir/ # Added to ignore the work_dir directory

rule_settings:
  enable:
    - default
    - inline-improvements
    - function-extraction
    - list-comprehension
    - use-with
    - return-early
    - merge-nested-ifs
  rule_types:
    - refactoring
    - suggestion
    - comment
  python_version: "3.9"

rules: # Custom rules for specific cases.
  - id: no-print-statements
    description: Avoid using print statements in test files; use logging instead.
    pattern: "print(${VAR})"
    language: python
    replacement: |
      logging.info(${VAR})
    explanation: Use logging instead of print statements for better control and verbosity in test files.
    paths:
      include:
        - test

  - id: no-explicit-exceptions
    description: Avoid catching base 'Exception'; use more specific exceptions instead.
    pattern: |
      try:
        ${BODY}
      except Exception as ${E}:
        ${HANDLER}
    language: python
    replacement: |
      try:
          ${BODY}
      except (ValueError, TypeError, IOError) as ${E}:
          ${HANDLER}
    explanation: Catch specific exceptions to avoid swallowing important errors.

  - id: avoid-function-declarations-in-blocks
    description: Avoid function declarations in blocks.
    pattern: |
      def ${name}(${params}):
        ${body}
    language: python
    replacement: |
      def ${name}(${params}):
        ${body}
    explanation: Function declarations in blocks can lead to unexpected behavior.

  - id: custom-raise-from-previous-error
    description: Use 'raise ... from' syntax to preserve exception context.
    pattern: |
      try:
        ${body}
      except ${exception} as e:
        ${body}
        raise ${new_exception}
    language: python
    replacement: |
      try:
        ${body}
      except ${exception} as e:
        ${body}
        raise ${new_exception} from e
      except ${exception} as e:
        ${body}
        raise ${new_exception} from e

metrics:
  quality_threshold: 15.0

github:
  labels: [sourcery-auto]
  ignore_labels:
    - sourcery-ignore
  request_review: auto
  sourcery_branch: sourcery/{base_branch}

clone_detection:
  min_lines: 2
  min_duplicates: 2
  identical_clones_only: false

proxy:
  url: "http://127.0.0.1:7890"
